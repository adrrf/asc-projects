if [ -f ./tmp_zdt3p200g50/hvrefp200g50_1.out ]
then
	rm ./tmp_zdt3p200g50/hvrefp200g50_1.out
fi
if [ -f ./tmp_zdt3p200g50/hvrefp200g50_2.out ]
then
	rm ./tmp_zdt3p200g50/hvrefp200g50_2.out
fi
for j in 01 02 03 04 05 06 07 08 09 10
do
# Lee la primera columna del fichero de datos, obtiene el máximo y lo almacena en un fichero
cat ./UNKNOWN/allpop200g50seed$j.out | awk '{print $1;}' | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' > ./tmp_zdt3p200g50/hvreff$j_1.out
cat ./tmp_zdt3p200g50/hvreff$j_1.out >> ./tmp_zdt3p200g50/hvrefp200g50_1.out
# Lee la segunda columna del fichero de datos, obtiene el máximo y lo almacena en un fichero
cat ./UNKNOWN/allpop200g50seed$j.out | awk '{print $2;}' | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' > ./tmp_zdt3p200g50/hvreff$j_2.out
cat ./tmp_zdt3p200g50/hvreff$j_2.out >> ./tmp_zdt3p200g50/hvrefp200g50_2.out
done
for j in 01 02 03 04 05 06 07 08 09 099
do
cat ./EVAL10000/P200G50/zdt3_all_popmp200g50_seed$j.out | awk '{print $1;}' | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' > ./tmp_zdt3p200g50/hvrefs$j_1.out
cat ./tmp_zdt3p200g50/hvrefs$j_1.out >> ./tmp_zdt3p200g50/hvrefp200g50_1.out
cat ./EVAL10000/P200G50/zdt3_all_popmp200g50_seed$j.out | awk '{print $2;}' | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' > ./tmp_zdt3p200g50/hvrefs$j_2.out
cat ./tmp_zdt3p200g50/hvrefs$j_2.out >> ./tmp_zdt3p200g50/hvrefp200g50_2.out
done
# En este momento hvrefp200g50_1.out contiene el valor máximo del primer objetivo 
# en cada una de las 20 ejecuciones y hvrefp200g50_2.out el del segundo objetivo
# Calcula el valor máximo del primer objetivo y lo almacena en hvrefp200g50.out 
cat ./tmp_zdt3p200g50/hvrefp200g50_1.out | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' > ./tmp_zdt3p200g50/hvrefp200g50.out
# Calcula el valor máximo del segundo objetivo y lo añade a hvrefp200g50.out 
cat ./tmp_zdt3p200g50/hvrefp200g50_2.out | awk '{if(max==""){max=$1}; if($1>max) {max=$1}} END {print max}' >> ./tmp_zdt3p200g50/hvrefp200g50.out


# Ejecutamos metrics sobre cada fichero de datos con un fichero de control creado automáticamente
for j in 01 02 03 04 05 06 07 08 09 10
do
cp ./UNKNOWN/allpop200g50seed$j.out zdt3_all_popmp200g50.out
# Copiamos el fichero de control a falta del punto de referencia 
cp  zdt3p200g50stallbasic.in  zdt3p200g50stallref.in
# Añadimos al fichero de control el punto de referencia calculado anteriormente
cat ./tmp_zdt3p200g50/hvrefp200g50.out >> zdt3p200g50stallref.in
# Ejecutamos metrics
./metrics < zdt3p200g50stallref.in
# Copiamos los ficheros de resultados con otro nombre por si se quieren usar después.
cp hypervol.out ./tmp_zdt3p200g50/hypervolf$j.out
cp spacing.out ./tmp_zdt3p200g50/spacingf$j.out
done
for j in 01 02 03 04 05 06 07 08 09 099
do
cp ./EVAL10000/P200G50/zdt3_all_popmp200g50_seed$j.out zdt3_all_popmp200g50.out
cp  zdt3p200g50stallbasic.in  zdt3p200g50stallref.in
cat ./tmp_zdt3p200g50/hvrefp200g50.out >> zdt3p200g50stallref.in
./metrics < zdt3p200g50stallref.in
cp hypervol.out ./tmp_zdt3p200g50/hypervols$j.out
cp spacing.out ./tmp_zdt3p200g50/spacings$j.out
done
